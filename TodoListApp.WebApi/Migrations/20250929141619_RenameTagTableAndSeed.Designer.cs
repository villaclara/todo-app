// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoListApp.WebApi.Data;

#nullable disable

namespace TodoListApp.WebApi.Migrations
{
    [DbContext(typeof(TodoListDbContext))]
    [Migration("20250929141619_RenameTagTableAndSeed")]
    partial class RenameTagTableAndSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TodoListApp.WebApi.Entities.TodoListEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TodoLists");
                });

            modelBuilder.Entity("TodoListApp.WebApi.Entities.TodoTaskEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AssigneeId")
                        .HasColumnType("int");

                    b.Property<string>("AssigneeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAtDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DueToDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TodoListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TodoListId");

                    b.ToTable("TodoTasks");
                });

            modelBuilder.Entity("TodoListApp.WebApi.Entities.TodoTaskTagEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TodoTaskTags", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Work"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Personal"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Urgent"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Low Priority"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Errands"
                        },
                        new
                        {
                            Id = 6,
                            Title = "Shopping"
                        },
                        new
                        {
                            Id = 7,
                            Title = "Health"
                        },
                        new
                        {
                            Id = 8,
                            Title = "Finance"
                        },
                        new
                        {
                            Id = 9,
                            Title = "Study"
                        },
                        new
                        {
                            Id = 10,
                            Title = "Travel"
                        });
                });

            modelBuilder.Entity("TodoTaskEntityTodoTaskTagEntity", b =>
                {
                    b.Property<int>("TagListId")
                        .HasColumnType("int");

                    b.Property<int>("TodoTasksId")
                        .HasColumnType("int");

                    b.HasKey("TagListId", "TodoTasksId");

                    b.HasIndex("TodoTasksId");

                    b.ToTable("TodoTaskEntityTodoTaskTagEntity");
                });

            modelBuilder.Entity("TodoListApp.WebApi.Entities.TodoTaskEntity", b =>
                {
                    b.HasOne("TodoListApp.WebApi.Entities.TodoListEntity", "TodoList")
                        .WithMany("Tasks")
                        .HasForeignKey("TodoListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TodoList");
                });

            modelBuilder.Entity("TodoTaskEntityTodoTaskTagEntity", b =>
                {
                    b.HasOne("TodoListApp.WebApi.Entities.TodoTaskTagEntity", null)
                        .WithMany()
                        .HasForeignKey("TagListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TodoListApp.WebApi.Entities.TodoTaskEntity", null)
                        .WithMany()
                        .HasForeignKey("TodoTasksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TodoListApp.WebApi.Entities.TodoListEntity", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
