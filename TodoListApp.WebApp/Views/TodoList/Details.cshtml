@using TodoListApp.Common.Parameters.Filtering
@using TodoListApp.Common.Parameters.Sorting
@model TodoListViewModel
@{
    ViewData["ActiveSection"] = "List";
}

<div class="container py-4">

    <!-- TodoList Title -->
    <div class="d-flex justify-content-between align-items-center mb-2">
        <h2 class="fw-bold">@Model.Title</h2>

        <div class="d-flex gap-2">
            <a class="btn btn-primary btn-sm" asp-controller="TodoList" asp-action="CreateEdit" asp-route-id="@Model.Id">
                Edit
            </a>
        </div>
    </div>

    <!-- TodoList Description -->
    <p class="text-muted mb-4">@Model.Description</p>

    <div class="d-flex justify-content-between align-items-end mb-3">
        <!-- Add Task button -->
        <a class="btn btn-primary btn-sm" asp-controller="TodoTask" asp-action="CreateEdit" asp-route-listId="@Model.Id">
            Add Task
        </a>

        <div class="d-flex gap-2">

            <!-- Filter and Sort dropdowns -->
            <form asp-controller="TodoList" asp-action="Details" method="get" class="m-0">
                <input type="hidden" name="listId" value="@Model.Id" />
                <input type="hidden" name="userId" value="@Model.UserId" />
                <input type="hidden" name="Sorting" value="@Model.TodoTaskIndex?.Sorting" />

                <div class="col-auto">
                    <label for="StatusFilterOption" class="form-label small text-secondary">Task Status:</label>
                    <select name="StatusFilterOption" id="StatusFilterOption" class="form-select form-select-sm text-light border-secondary" onchange="this.form.submit()">
                        <option value="All" selected="@(Model.TodoTaskIndex?.StatusFilterOption == TodoTaskStatusFilterOption.All)">All</option>
                        <option value="NotCompleted" selected="@(Model.TodoTaskIndex?.StatusFilterOption == TodoTaskStatusFilterOption.NotCompleted)">To Complete</option>
                        <option value="NotStarted" selected="@(Model.TodoTaskIndex?.StatusFilterOption == TodoTaskStatusFilterOption.NotStarted)">Not Started</option>
                        <option value="InProgress" selected="@(Model.TodoTaskIndex?.StatusFilterOption == TodoTaskStatusFilterOption.InProgress)">In Progress</option>
                        <option value="Completed" selected="@(Model.TodoTaskIndex?.StatusFilterOption == TodoTaskStatusFilterOption.Completed)">Completed</option>
                    </select>
                </div>
            </form>

            <!-- Sorting Dropdown -->
            <form asp-controller="TodoList" asp-action="Details" method="get" class="m-0">
                <input type="hidden" name="listId" value="@Model.Id" />
                <input type="hidden" name="userId" value="@Model.UserId" />
                <input type="hidden" name="StatusFilterOption" value="@Model.TodoTaskIndex?.StatusFilterOption" />

                <label for="Sorting" class="form-label small text-secondary">Sort by:</label>
                <select name="sorting" class="form-select form-select-sm w-auto bg-dark text-light border-secondary" onchange="this.form.submit()">
                    <option value="CreatedDateDesc" selected="@(Model.TodoTaskIndex?.Sorting == TaskSortingOptions.CreatedDateDesc)">Created Date ↓</option>
                    <option value="CreatedDateAsc" selected="@(Model.TodoTaskIndex?.Sorting == TaskSortingOptions.CreatedDateAsc)">Created Date ↑</option>
                    <option value="DueDateAsc" selected="@(Model.TodoTaskIndex?.Sorting == TaskSortingOptions.DueDateAsc)">Due Date ↑</option>
                    <option value="DueDateDesc" selected="@(Model.TodoTaskIndex?.Sorting == TaskSortingOptions.DueDateDesc)">Due Date ↓</option>
                    <option value="TaskStatusAsc" selected="@(Model.TodoTaskIndex?.Sorting == TaskSortingOptions.TaskStatusAsc)">Status ↑</option>
                    <option value="TaskStatusDesc" selected="@(Model.TodoTaskIndex?.Sorting == TaskSortingOptions.TaskStatusDesc)">Status ↓</option>
                </select>
            </form>
        </div>
    </div>

    <!-- Tasks -->
    @if (Model.TodoTaskIndex == null || !Model.TodoTaskIndex.TodoTasks.Any())
    {
        <p class="text-muted">No tasks in this list.</p>
    }
    else
    {
        <ul class="list-group">
            @foreach (var task in Model.TodoTaskIndex.TodoTasks)
            {
                <li class="list-unstyled">
                    <a href="@Url.Action("Details", "TodoTask", new { listId = task.TodoListId, id = task.Id })"
                       class="list-group-item list-group-item-action d-flex justify-content-between align-items-center mb-2 rounded
                              @(task.IsOverdue && task.Status != TodoTaskStatus.Completed ? "task-overdue" : "") text-light border-task">

                        <div class="flex-grow-1 me-md-3">
                            <div class="row">
                                <div class="col-10 col-md-6">

                                    <!-- Title + Status + Overdue -->
                                    <div class="d-flex align-items-center mb-2">
                                        <strong class="me-2">@task.Title</strong>
                                        <span class="badge @(task.Status == TodoTaskStatus.Completed ? "badge-completed" :
                                                                                                                        task.Status == TodoTaskStatus.InProgress ? "badge-inprogress" : "badge-notstarted")">
                                    @task.Status
                                </span>
                                @if (task.IsOverdue && task.Status != TodoTaskStatus.Completed)
                                        {
                                            <span class="badge badge-overdue ms-1">Overdue</span>
                                        }
                                    </div>

                                    <!-- Assignee -->
                                    <small class="d-block mb-2">
                                        <i class="bi bi-person me-1 text-muted"></i>
                                        <strong class="text-muted">Assignee:</strong> @(task.AssigneeName ?? "Unassigned")
                                    </small>

                                    <div class="d-md-none col-10 col-md-5 my-md-auto">
                                        <div class="d-none d-md-block">
                                            <div class="row p-0">
                                                <span>
                                                    <i class="bi bi-calendar-event me-1 text-muted"></i>
                                                    <strong class="text-muted">Created:</strong>
                                                    @(task.CreatedAtDate == default ? "No date" : task.CreatedAtDate.ToString("MMM dd"))
                                                </span>
                                            </div>
                                            <div class="row p-0">
                                                <span>
                                                    <i class="bi bi-calendar-event me-1 text-muted"></i>
                                                    <strong class="text-muted">Due:</strong>
                                                    @(task.DueToDate == default ? "No date" : task.DueToDate.ToString("MMM dd"))
                                                </span>
                                            </div>
                                        </div>

                                        <div class="d-md-none d-block">
                                            <small class="d-block mb-2">
                                                <i class="bi bi-calendar-event me-1 text-muted"></i>
                                                <strong class="text-muted">Created:</strong>
                                                @(task.CreatedAtDate == default ? "No date" : task.CreatedAtDate.ToString("MMM dd"))
                                                &nbsp;|&nbsp;
                                                <i class="bi bi-calendar-event me-1 text-muted"></i>
                                                <strong class="text-muted">Due:</strong>
                                                @(task.DueToDate == default ? "No date" : task.DueToDate.ToString("MMM dd"))
                                            </small>
                                        </div>
                                    </div>

                                    <!-- Tags -->
                                        <div class="small mb-2">
                                            <i class="bi bi-tag"></i><strong class="text-muted">Tags:</strong>
                                    @if (task.TagList != null && task.TagList.Any())
                                    {
                                            @foreach (var tag in task.TagList)
                                            {
                                                <span class="badge rounded-pill badge-tag">@tag.Title</span>
                                            }
                                    }
                                        </div>
                                </div>

                                <!-- Created / Due -->
                                <div class="d-none d-md-block col-10 col-md-5 my-md-auto">
                                    <div class="d-none d-md-block">
                                    <div class="row p-0">
                                        <span>
                                            <i class="bi bi-calendar-event me-1 text-muted"></i>
                                            <strong class="text-muted">Created:</strong>
                                            @(task.CreatedAtDate == default ? "No date" : task.CreatedAtDate.ToString("MMM dd"))
                                        </span>
                                    </div>
                                    <div class="row p-0">
                                        <span>
                                            <i class="bi bi-calendar-event me-1 text-muted"></i>
                                            <strong class="text-muted">Due:</strong>
                                            @(task.DueToDate == default ? "No date" : task.DueToDate.ToString("MMM dd"))
                                        </span>
                                    </div>
                                    </div>

                                    <div class="d-md-none d-block">
                                    <small class="d-block mb-2">
                                        <i class="bi bi-calendar-event me-1 text-muted"></i>
                                        <strong class="text-muted">Created:</strong>
                                        @(task.CreatedAtDate == default ? "No date" : task.CreatedAtDate.ToString("MMM dd"))
                                            &nbsp;|&nbsp;
                                        <i class="bi bi-calendar-event me-1 text-muted"></i>
                                        <strong class="text-muted">Due:</strong>
                                        @(task.DueToDate == default ? "No date" : task.DueToDate.ToString("MMM dd"))
                                    </small>
                                    </div>
                                </div>

                                


                            <!-- Chevron -->
                                <div class="col-1 my-auto">
                                <div class="mt-0 text-nowrap">
                                    <span class="chevron">&#8250;</span>
                                </div>
                                </div>
                            </div>

                        </div>

                    </a>
                </li>

            }
        </ul>

        <!-- Pagination -->
        @if (Model.TodoTaskIndex != null && Model.TodoTaskIndex.TotalPages > 1)
        {
            <nav aria-label="Todo tasks pagination" class="mt-3">
                <ul class="pagination pagination-sm justify-content-center">
                    <li class="page-item @(Model.TodoTaskIndex.HasPrevious ? "" : "disabled")">
                        <a class="page-link"
                           asp-controller="TodoList"
                           asp-action="Details"
                           asp-route-listId="@Model.Id"
                           asp-route-pageNumber="@(Model.TodoTaskIndex.CurrentPage - 1)"
                           asp-route-pageSize="@Model.TodoTaskIndex.PageSize">
                            Previous
                        </a>
                    </li>
                    @for (int i = 1; i <= Model.TodoTaskIndex.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.TodoTaskIndex.CurrentPage ? "active" : "")">
                            <a class="page-link"
                               asp-controller="TodoList"
                               asp-action="Details"
                               asp-route-listId="@Model.Id"
                               asp-route-pageNumber="@i"
                               asp-route-pageSize="@Model.TodoTaskIndex.PageSize">
                                @i
                            </a>
                        </li>
                    }
                    <li class="page-item @(Model.TodoTaskIndex.HasNext ? "" : "disabled")">
                        <a class="page-link"
                           asp-controller="TodoList"
                           asp-action="Details"
                           asp-route-listId="@Model.Id"
                           asp-route-pageNumber="@(Model.TodoTaskIndex.CurrentPage + 1)"
                           asp-route-pageSize="@Model.TodoTaskIndex.PageSize">
                            Next
                        </a>
                    </li>
                </ul>
                <div class="text-center text-muted">
                    <small>
                        Showing page @Model.TodoTaskIndex.CurrentPage of @Model.TodoTaskIndex.TotalPages (Total items: @Model.TodoTaskIndex.TotalCount)
                    </small>
                </div>
            </nav>
        }
    }
</div>

<style>
    body {
        background-color: #151515;
        color: #c0c0c0;
    }

    h2 {
        color: #e0e0e0;
    }

    .task-card {
        background: #1e1e1e;
        border-radius: 12px;
        border: none;
        box-shadow: 0 2px 6px rgba(0,0,0,0.3);
        transition: transform 0.2s, box-shadow 0.2s;
    }

        .task-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 14px rgba(0,0,0,0.4);
            background: #1f2937 !important;
        }

    .badge {
        font-size: 0.75rem;
        padding: 0.25em 0.5em;
        border-radius: 8px;
    }

    .badge-completed {
        background-color: #50c878;
        color: #fff;
    }

    .badge-inprogress {
        background-color: #4a90e2; /* blue instead of orange */
        color: #fff;
    }

    .badge-notstarted {
        background-color: #777;
        color: #fff;
    }

    .badge-overdue {
        background-color: #e94f4f;
        color: #fff;
    }

    .badge-tag {
        background: linear-gradient(135deg, #8e2de2 0%, #4a00e0 100%);
        color: #fff;
        margin-right: 0.25rem;
    }

    .task-overdue {
        border-left: 4px solid #e94f4f;
    }

    .btn {
        border-radius: 8px;
    }
</style>
