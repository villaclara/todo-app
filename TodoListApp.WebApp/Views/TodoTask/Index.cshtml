@using TodoListApp.Common.Models.Enums
@using TodoListApp.Common.Parameters.Sorting
@model TodoTaskIndexViewModel

<div class="container mt-3 d-flex justify-content-between align-items-center flex-wrap">
    <!-- Left: Title -->
    <h5 class="mb-0">My Assigned Tasks</h5>

    <!-- Right: Filter Toggle + Sorting -->
    <div class="d-flex align-items-center gap-2 flex-wrap">

        <!-- Filter Toggle -->
        <!-- Filter Toggle -->
        <button class="btn btn-outline-secondary btn-sm d-flex align-items-center gap-1 p-1 filter-toggle collapsed"
                type="button"
                data-bs-toggle="collapse"
                data-bs-target="#filterForm"
                aria-expanded="false"
                aria-controls="filterForm">
            <span>Filters</span>
            <i class="bi bi-chevron-down chevron-icon"></i>
        </button>


        <!-- Sorting Dropdown -->
        <form asp-controller="TodoTask" asp-action="Index" method="get" class="m-0">
            <input type="hidden" name="CreatedAfter" value="@Model.Filter?.CreatedAfter" />
            <input type="hidden" name="CreatedBefore" value="@Model.Filter?.CreatedBefore" />
            <input type="hidden" name="DueAfter" value="@Model.Filter?.DueAfter" />
            <input type="hidden" name="DueBefore" value="@Model.Filter?.DueBefore" />
            <input type="hidden" name="StatusOption" value="@Model.Filter?.StatusOption" />
            <input type="hidden" name="TodoListNameContains" value="@Model.Filter?.TodoListNameContains" />

            <select name="sorting" class="form-select form-select-sm w-auto" onchange="this.form.submit()">
                <option disabled selected>Sort by...</option>
                <option value="CreatedDateDesc" selected="@(Model.Sorting == TaskSortingOptions.CreatedDateDesc)">Created Date ↓</option>
                <option value="CreatedDateAsc" selected="@(Model.Sorting == TaskSortingOptions.CreatedDateAsc)">Created Date ↑</option>
                <option value="TodoListNameAsc" selected="@(Model.Sorting == TaskSortingOptions.TodoListNameAsc)">List Name ↑</option>
                <option value="TodoListNameDesc" selected="@(Model.Sorting == TaskSortingOptions.TodoListNameDesc)">List Name ↓</option>
                <option value="TaskStatusAsc" selected="@(Model.Sorting == TaskSortingOptions.TaskStatusAsc)">Status ↑</option>
                <option value="TaskStatusDesc" selected="@(Model.Sorting == TaskSortingOptions.TaskStatusDesc)">Status ↓</option>
                <option value="DueDateAsc" selected="@(Model.Sorting == TaskSortingOptions.DueDateAsc)">Due Date ↑</option>
                <option value="DueDateDesc" selected="@(Model.Sorting == TaskSortingOptions.DueDateDesc)">Due Date ↓</option>
            </select>
        </form>
    </div>
</div>

<!-- Collapsible Filter Form -->
<div class="collapse mt-2" id="filterForm">
    <form asp-controller="TodoTask" asp-action="Index" method="get" class="row g-2 align-items-end mb-3">
        <input type="hidden" name="Sorting" value="@Model.Sorting"/>
        <!-- Created Date -->
        <div class="col-auto">
            <label for="CreatedAfter" class="form-label small">Created After</label>
            <input type="date" name="CreatedAfter" id="CreatedAfter"
                   class="form-control form-control-sm"
                   value="@(Model.Filter?.CreatedAfter?.ToString("yyyy-MM-dd"))" />
        </div>
        <div class="col-auto">
            <label for="CreatedBefore" class="form-label small">Created Before</label>
            <input type="date" name="CreatedBefore" id="CreatedBefore"
                   class="form-control form-control-sm"
                   value="@(Model.Filter?.CreatedBefore?.ToString("yyyy-MM-dd"))" />
        </div>

        <!-- Due Date -->
        <div class="col-auto">
            <label for="DueAfter" class="form-label small">Due After</label>
            <input type="date" name="DueAfter" id="DueAfter"
                   class="form-control form-control-sm"
                   value="@(Model.Filter?.DueAfter?.ToString("yyyy-MM-dd"))" />
        </div>
        <div class="col-auto">
            <label for="DueBefore" class="form-label small">Due Before</label>
            <input type="date" name="DueBefore" id="DueBefore"
                   class="form-control form-control-sm"
                   value="@(Model.Filter?.DueBefore?.ToString("yyyy-MM-dd"))" />
        </div>

        @using TodoListApp.Common.Parameters.Filtering;
        <!-- Status -->
        <div class="col-auto">
            <label for="StatusOption" class="form-label small">Status</label>
            <select name="StatusOption" id="StatusOption" class="form-select form-select-sm">
                <option value="NotCompleted" selected="@(Model.Filter?.StatusOption == TodoTaskStatusFilterOption.NotCompleted)">To Complete</option>
                <option value="NotStarted" selected="@(Model.Filter?.StatusOption == TodoTaskStatusFilterOption.NotStarted)">Not Started</option>
                <option value="InProgress" selected="@(Model.Filter?.StatusOption == TodoTaskStatusFilterOption.InProgress)">In Progress</option>
                <option value="Completed" selected="@(Model.Filter?.StatusOption == TodoTaskStatusFilterOption.Completed)">Completed</option>
                <option value="All" selected="@(Model.Filter?.StatusOption == TodoTaskStatusFilterOption.All)">All</option>
            </select>
        </div>

        <!-- Todo List Name -->
        <div class="col-auto">
            <label for="TodoListNameContains" class="form-label small">List Name</label>
            <input type="text" name="TodoListNameContains" id="TodoListNameContains"
                   class="form-control form-control-sm"
                   value="@Model.Filter?.TodoListNameContains" />
        </div>

        <!-- Buttons -->
        <div class="col-auto">
            <button type="submit" class="btn btn-sm btn-primary">Apply</button>
            <a asp-controller="TodoTask" asp-action="Index" class="btn btn-sm btn-secondary">Reset</a>
        </div>
    </form>
</div>

@if(!Model.TodoTasks.Any() || Model.TodoTasks is null)
{
    <p class="text-muted pt-4">You have no tasks at all or with specified filter.</p>
}

<!-- Task Groups -->
@foreach (var group in Model.TodoTasks!.GroupBy(t => t.TodoListName))
{
    <div class="m-md-3 mt-4">
        <h6 class="text-primary border-bottom pb-1 mb-2">
            <i class="bi bi-list-task me-1"></i> @group.Key
        </h6>

        <ul class="list-group">
            @foreach (var task in group)
            {
                <li class="list-unstyled">

                <a href="@Url.Action("DetailsForAssignee", "TodoTask", new { listId = task.TodoListId, id = task.Id })@Context.Request.QueryString"
                   class="list-group-item list-group-item-action d-flex justify-content-between align-items-center shadow-sm mb-2 rounded
                                    @(task.IsOverdue && task.Status != TodoTaskStatus.Completed ? "task-overdue !important" : "") ">
                    <div class="flex-grow-1 me-md-3">
                        <div class="d-flex align-items-center mb-1">
                            <strong class="me-2">@task.Title</strong>
                            <span class="badge
                                        @(task.Status == TodoTaskStatus.Completed ? "bg-success" :
                                                                    task.Status == TodoTaskStatus.InProgress ? "bg-primary" : "bg-secondary")">
                        @task.Status
                    </span>
                    @if (task.IsOverdue && task.Status != TodoTaskStatus.Completed)
                            {
                                <span class="badge bg-danger ms-1">Overdue</span>
                            }
                        </div>
                        <small class="text-muted d-block">
                            <i class="bi bi-calendar-event me-1"></i> <strong>Created:</strong>
                            @(task.CreatedAtDate == default ? "No date" : task.CreatedAtDate.ToString("MMM dd"))
                            &nbsp;|&nbsp;
                            <i class="bi bi-calendar-event me-1"></i> <strong>Due:</strong>
                            @(task.DueToDate == default ? "No date" : task.DueToDate.ToString("MMM dd"))
                        </small>
                    </div>
                    <div class="mt-2 mt-md-0 text-nowrap">
                        <span class="chevron">&#8250;</span>
                    </div>
                </a>
                </li>
            }
        </ul>
    </div>
}

<!-- Pagination -->
@if (Model.TotalPages > 1)
{
    <nav aria-label="Todo tasks pagination" class="mt-3">
        <ul class="pagination pagination-sm justify-content-center flex-wrap">
            <li class="page-item @(Model.HasPrevious ? "" : "disabled")">
                <a class="page-link"
                   asp-controller="TodoTask"
                   asp-action="Index"
                   asp-route-pageNumber="@(Model.CurrentPage - 1)"
                   asp-route-pageSize="@Model.PageSize"
                   asp-route-sorting="@Model.Sorting"
                   asp-route-CreatedAfter="@Model.Filter?.CreatedAfter"
                   asp-route-CreatedBefore="@Model.Filter?.CreatedBefore"
                   asp-route-DueAfter="@Model.Filter?.DueAfter"
                   asp-route-DueBefore="@Model.Filter?.DueBefore"
                   asp-route-StatusOption="@Model.Filter?.StatusOption"
                   asp-route-TodoListNameContains="@Model.Filter?.TodoListNameContains">
                    « Prev
                </a>
            </li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link"
                       asp-controller="TodoTask"
                       asp-action="Index"
                       asp-route-pageNumber="@i"
                       asp-route-pageSize="@Model.PageSize"
                       asp-route-sorting="@Model.Sorting"
                       asp-route-CreatedAfter="@Model.Filter?.CreatedAfter"
                       asp-route-CreatedBefore="@Model.Filter?.CreatedBefore"
                       asp-route-DueAfter="@Model.Filter?.DueAfter"
                       asp-route-DueBefore="@Model.Filter?.DueBefore"
                       asp-route-StatusOption="@Model.Filter?.StatusOption"
                       asp-route-TodoListNameContains="@Model.Filter?.TodoListNameContains">
                        @i
                    </a>
                </li>
            }
            <li class="page-item @(Model.HasNext ? "" : "disabled")">
                <a class="page-link"
                   asp-controller="TodoTask"
                   asp-action="Index"
                   asp-route-pageNumber="@(Model.CurrentPage + 1)"
                   asp-route-pageSize="@Model.PageSize"
                   asp-route-sorting="@Model.Sorting"
                   asp-route-CreatedAfter="@Model.Filter?.CreatedAfter"
                   asp-route-CreatedBefore="@Model.Filter?.CreatedBefore"
                   asp-route-DueAfter="@Model.Filter?.DueAfter"
                   asp-route-DueBefore="@Model.Filter?.DueBefore"
                   asp-route-StatusOption="@Model.Filter?.StatusOption"
                   asp-route-TodoListNameContains="@Model.Filter?.TodoListNameContains">
                    Next »
                </a>
            </li>
        </ul>
        <div class="text-center text-muted small">
            Page @Model.CurrentPage of @Model.TotalPages (Total: @Model.TotalCount)
        </div>
    </nav>
}


<style>
    .list-group-item-action:hover {
        transform: translateY(-2px);
        transition: transform 0.2s;
    }

    .list-group-item {
        border: 1px solid #dee2e6 !important;
    }

    .task-overdue {
        border-left: 4px solid #dc3545 !important;
    }

    .chevron {
        font-size: 1.5rem;
        color: #6c757d;
        transition: transform 0.2s;
    }

    /* Rotate the chevron when the collapse is open */
    .filter-toggle .chevron-icon {
        transition: transform 0.3s ease;
    }

    .filter-toggle:not(.collapsed) .chevron-icon {
        transform: rotate(180deg);
    }

</style>
