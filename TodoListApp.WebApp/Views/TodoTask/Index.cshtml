@model TodoTaskIndexViewModel

<div class="container">
    <h5 class="mt-3">My Assigned Tasks</h5>
</div>

@foreach (var group in Model.TodoTasks.GroupBy(t => t.TodoListName))
{
    <div class="m-md-3 mt-4">
        <!-- TodoList Name -->
        <h6 class="text-primary border-bottom pb-1 mb-2">
            <i class="bi bi-list-task me-1"></i> @group.Key
        </h6>

        <ul class="list-group">
            @foreach (var task in group)
            {
                <li class="list-group-item list-group-item-action mb-1 shadow-sm py-1 px-3
                                   d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center
                                   @(task.IsOverdue && task.Status != TodoTaskStatus.NotStarted ? "border-start border-3 border-danger" : "")">

                    <!-- Left side: main info -->
                    <div class="flex-grow-1 me-md-3">
                        <div class="d-flex align-items-center mb-1">
                            <strong class="me-2">@task.Title</strong>
                            <span class="badge
                                        @(task.Status == TodoTaskStatus.Completed ? "bg-success" :
                                                                    task.Status == TodoTaskStatus.InProgress ? "bg-primary" : "bg-secondary")">
                        @task.Status
                    </span>
                    @if (task.IsOverdue && task.Status != TodoTaskStatus.Completed)
                            {
                                <span class="badge bg-danger ms-1">Overdue</span>
                            }
                        </div>

                        @if (!string.IsNullOrEmpty(task.Description))
                        {
                            <div class="text-muted small mb-1">
                                @task.Description
                            </div>
                        }

                        <small class="text-muted d-block">
                            <i class="bi bi-person me-1"></i> <strong>Assignee:</strong> @(task.AssigneeName ?? "Unassigned")
                            &nbsp;|&nbsp;
                            <i class="bi bi-calendar-event me-1"></i> <strong>Due:</strong>
                            @(task.DueToDate == default ? "No due date" : task.DueToDate.ToString("MMM dd"))
                        </small>
                    </div>

                    <!-- Right side: actions -->
                    <div class="mt-2 mt-md-0 text-nowrap">
                        @if (task.IsOverdue && task.Status != TodoTaskStatus.Completed)
                        {
                            <form asp-controller="TodoTask" asp-action="Complete" method="post" class="d-inline">
                                <input type="hidden" name="id" value="@task.Id" />
                                <button type="submit" class="btn btn-success btn-sm">
                                    ✓ Complete
                                </button>
                            </form>
                        }
                    </div>
                </li>
            }
        </ul>
    </div>
}

@if (Model.TotalPages > 1)
{
    <nav aria-label="Todo tasks pagination" class="mt-3">
        <ul class="pagination pagination-sm justify-content-center flex-wrap">
            <li class="page-item @(Model.HasPrevious ? "" : "disabled")">
                <a class="page-link"
                   asp-controller="TodoTask"
                   asp-action="Index"
                   asp-route-pageNumber="@(Model.CurrentPage - 1)"
                   asp-route-pageSize="@Model.PageSize">
                    « Prev
                </a>
            </li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link"
                       asp-controller="TodoTask"
                       asp-action="Index"
                       asp-route-pageNumber="@i"
                       asp-route-pageSize="@Model.PageSize">
                        @i
                    </a>
                </li>
            }
            <li class="page-item @(Model.HasNext ? "" : "disabled")">
                <a class="page-link"
                   asp-controller="TodoTask"
                   asp-action="Index"
                   asp-route-pageNumber="@(Model.CurrentPage + 1)"
                   asp-route-pageSize="@Model.PageSize">
                    Next »
                </a>
            </li>
        </ul>
        <div class="text-center text-muted small">
            Page @Model.CurrentPage of @Model.TotalPages (Total: @Model.TotalCount)
        </div>
    </nav>
}

                <style>
    .list-group-item-action:hover
    {
        transform: translateY(-2px);
        transition: transform 0.2s;
    }

    .list-group-item {
        border: 1px solid #dee2e6 !important; /* Bootstrap default gray */
    }
                </style>