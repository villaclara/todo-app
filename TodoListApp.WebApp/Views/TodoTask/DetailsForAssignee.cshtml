@model TodoTaskViewModel

<div class="container py-4">
    <div class="card shadow rounded p-4 col-md-10 mx-auto" style="max-width: 900px;">

        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2 class="mb-0">Task Details</h2>

            <div class="d-flex gap-2">
                <a asp-controller="TodoTask" asp-action="Index" class="btn btn-outline-secondary">
                    Back to List
                </a>
            </div>
        </div>

        <div class="row g-4">

            @using TodoListApp.Common.Models.Enums

            <div class="mb-3 d-flex">
                <h5 class="fw-bold mx-3">Status</h5>

                @if (Model.Status == TodoTaskStatus.Completed)
                {
                    <!-- Completed status, no dropdown -->
                    <span class="badge bg-success fs-6">@Model.Status</span>
                }
                else
                {
                    <!-- NotStarted or InProgress: show dropdown -->
                    <div class="dropdown">
                        <button class="badge border-0 
                    @(Model.Status == TodoTaskStatus.InProgress ? "bg-primary" : "bg-secondary") fs-6 dropdown-toggle"
                                type="button" id="statusDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                            @Model.Status
                        </button>

                        <ul class="dropdown-menu" aria-labelledby="statusDropdown">
                            @if (Model.Status == TodoTaskStatus.NotStarted)
                            {
                                <li>
                                    <form method="post" asp-action="UpdateStatus" asp-controller="TodoTask">
                                        <input type="hidden" name="id" value="@Model.Id" />
                                        <input type="hidden" name="listId" value="@Model.TodoListId" />
                                        <input type="hidden" name="status" value="@TodoTaskStatus.InProgress" />
                                        <button type="submit" class="dropdown-item">In Progress</button>
                                    </form>
                                </li>
                            }
                            else if (Model.Status == TodoTaskStatus.InProgress)
                            {
                                <li>
                                    <form method="post" asp-action="UpdateStatus" asp-controller="TodoTask">
                                        <input type="hidden" name="id" value="@Model.Id" />
                                        <input type="hidden" name="listId" value="@Model.TodoListId" />
                                        <input type="hidden" name="status" value="@TodoTaskStatus.NotStarted" />
                                        <button type="submit" class="dropdown-item">Not Started</button>
                                    </form>
                                </li>
                                <li>
                                    <form method="post" asp-action="UpdateStatus" asp-controller="TodoTask">
                                        <input type="hidden" name="id" value="@Model.Id" />
                                        <input type="hidden" name="listId" value="@Model.TodoListId" />
                                        <input type="hidden" name="status" value="@TodoTaskStatus.Completed" />
                                        <button type="submit" class="dropdown-item">Completed</button>
                                    </form>
                                </li>
                            }
                        </ul>
                    </div>
                }
            </div>

<!-- Left Column: Task Info -->
<div class="col-md-6">

    <!-- Title -->
    <div class="mb-3">
        <div class="text-muted fs-6 mb-1 fw-bold">
            <i class="bi bi-card-text me-1"></i>Title:
        </div>
        <div class="fs-5 text-dark">@Model.Title</div>
    </div>

    <!-- Description -->
    <div class="mb-3">
        <div class="text-muted fs-6 mb-1 fw-bold">
            <i class="bi bi-pencil-square me-1"></i>Description:
        </div>
        <div class="fs-6 text-dark">
            @(!string.IsNullOrWhiteSpace(Model.Description) ? Model.Description : "No description")
        </div>
    </div>

    <!-- Tags -->
    @if (Model.TagList != null && Model.TagList.Any())
    {
        <div class="mb-3">
            <div class="text-muted fs-6 mb-1 fw-bold">
                <i class="bi bi-tags me-1"></i>Tags:
            </div>
            <div class="d-flex flex-wrap align-items-center">
                @foreach (var tag in Model.TagList)
                {
                    <span class="badge rounded-pill text-light opacity-100 me-1 mb-1"
                          style="background: linear-gradient(135deg, #8e2de2 0%, #4a00e0 100%);">
                        @tag.Title
                    </span>
                }
            </div>
        </div>
    }
</div>

<!-- Right Column: Status & Assignee -->
<div class="col-md-6">

    <!-- Assignee -->
    <div class="mb-3">
        <div class="text-muted fs-6 mb-1 fw-bold">
            <i class="bi bi-person me-1"></i>Assignee:
        </div>
        <div class="fs-6 text-dark">@Model.AssigneeName (@Model.AssigneeId)</div>
    </div>

    <!-- Created Date -->
    <div class="mb-3">
        <div class="text-muted fs-6 mb-1 fw-bold">
            <i class="bi bi-calendar-event me-1"></i>Created Date:
        </div>
        <div class="fs-6 text-dark">
            @((Model.CreatedAtDate == default) ? "No date" : Model.CreatedAtDate.ToString("MMM dd, yyyy"))
        </div>
    </div>

    <!-- Due Date -->
    <div class="mb-3">
        <div class="text-muted fs-6 mb-1 fw-bold">
            <i class="bi bi-calendar2-check me-1"></i>Due Date:
        </div>
        <div class="fs-6 text-dark">
            @((Model.DueToDate == default) ? "No due date" : Model.DueToDate.ToString("MMM dd, yyyy"))
        </div>
    </div>

</div>



<style>
    .card {
        background-color: #ffffff;
        border-radius: 1rem;
    }

    h5.fw-bold {
        margin-bottom: 0.25rem;
        color: inherit; /* remove primary color */
    }

    p {
        margin-bottom: 0.75rem;
        color: #495057;
    }

    .badge {
        padding: 0.5em 0.75em;
        font-size: 0.9rem;
    }

    @@media (max-width: 767px) {
        .row.g-4
        {
            flex-direction: column;
        }
    }
</style>
